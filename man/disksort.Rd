% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disksort.R
\name{disksort}
\alias{disksort}
\alias{streambin}
\title{Sort File On Disk}
\usage{
disksort(infile, outfile = NULL, sortcolumn = 1L, breaks = NULL,
  nrows = 1000L, nbins = 10L, read.table.args = NULL,
  write.table.args = NULL, cleanup = TRUE)

streambin(infile, firstchunk, sortcolumn = 1L, breaks = NULL,
  nrows = 1000L, read.table.args = NULL)
}
\arguments{
\item{infile}{unsorted file like object to read from. See \code{\link[utils]{read.table}}.}

\item{outfile}{where to write the sorted file. See
\code{\link[utils]{write.table}}. If \code{infile} is the name of a file
then the default prepends "sorted_" to this name.}

\item{sortcolumn}{which column of the data frame to sort on}

\item{breaks}{vector giving points to split data for binning}

\item{nrows}{number of rows in the data.frame held in memory}

\item{nbins}{number of bins for bin sort. Ignored if \code{breaks} is
specified.}

\item{read.table.args}{named list of extra arguments to read.table}

\item{write.table.args}{named list of extra arguments to write.table.
Defaults to using read.table.args to preserve the original formatting.}

\item{cleanup}{remove intermediate files?}

\item{firstchunk}{first rows from \code{infile}}
}
\description{
This function is designed to handle files larger than memory. At most
\code{nrows} will be present in memory at once. It is not parallel.
For this to work efficiently it's necessary that the data between
\code{breaks} fits into memory.
}
\section{Functions}{
\itemize{
\item \code{streambin}: Stream File Into Bins

Read a data frame, split it into bins, and write to those
bins on disk.
}}

